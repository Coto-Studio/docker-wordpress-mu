# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "app".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  wordpress:
    build: .
    ports:
      - 80:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
      WORDPRESS_TABLE_PREFIX: wp_
      WORDPRESS_CONFIG_EXTRA: |
        /* WP Memory Limit */
        define('WP_MEMORY_LIMIT', '128M');
        /* Enable W3 Total Cache */
        define('WP_CACHE', true);
        /* Multisite */
        define('WP_ALLOW_MULTISITE', true );
      #   define('MULTISITE', true);
      #   define('SUBDOMAIN_INSTALL', false);
      #   define('DOMAIN_CURRENT_SITE', '127.0.0.1');
      #   define('PATH_CURRENT_SITE', '/');
      #   define('SITE_ID_CURRENT_SITE', 1);
      #   define('BLOG_ID_CURRENT_SITE', 1);
      #   define('ADMIN_COOKIE_PATH', '/');
      #   define('COOKIEPATH', '');
      #   define('SITECOOKIEPATH', '');
      #   /* WP Memory Limit */
      #   define('WP_MEMORY_LIMIT', '128M');
      #   /* Enable W3 Total Cache */
      #   define('WP_CACHE', true);
    volumes:
      - wordpress:/var/www/html
      - ./themes:/var/www/html/wp-content/themes/
      - ./plugins:/var/www/html/wp-content/plugins/
      - ./config-files/.htaccess:/var/www/html/.htaccess
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mariadb
    restart: always
    environment:
      MARIADB_DATABASE: exampledb
      MARIADB_USER: exampleuser
      MARIADB_PASSWORD: examplepass
      MARIADB_RANDOM_ROOT_PASSWORD: "1"
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      interval: 30s
      retries: 3
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized",
        ]
      timeout: 30s
  # db-mysql:
  #   image: mysql:8
  #   restart: always
  #   environment:
  #     MYSQL_DATABASE: exampledb
  #     MYSQL_USER: exampleuser
  #     MYSQL_PASSWORD: examplepass
  #     MYSQL_RANDOM_ROOT_PASSWORD: "1"
  #   volumes:
  #     - db:/var/lib/mysql
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     timeout: 20s
  #     retries: 10
volumes:
  wordpress:
  db:
